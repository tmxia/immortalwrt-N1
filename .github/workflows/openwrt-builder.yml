name: Build ImmortalWrt for N1

on:
  workflow_dispatch:
   inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: "0 0 1,16 * *"

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  CONFIG_FILE: N1/.config
  DIY_SH: N1/diy.sh
  FILES: N1/files
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main


    - name: Free up space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: disk
      run: |
           echo "ff"
           df -h
     
    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq install -y $(curl -fsSL https://raw.githubusercontent.com/nantayo/My-Pkg/master/2305)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH --single-branch --depth=1 openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt


    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load custom config
      run: |
        [ -e $FILES ] && mv $FILES openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH

    - name: SSH connect to Actions
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true') || contains(github.event.action, 'ssh')

    - name: Download package
      working-directory: ./openwrt
      run: |
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      run: |
        chmod -R 755 openwrt
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "compile_status=success" >> $GITHUB_ENV
        rm -rf ${{ github.workspace }}/openwrt/bin/targets/*/*/packages
        df -hT

    - name: Free up space2
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: 清理磁盘空
      run: |
        echo "清理之前："
        df -hT
        mkdir openwrt-armvirt
        mkdir /workdir/upload
        cp openwrt/bin/targets/*/*/*.tar.gz /workdir/upload/
        mv openwrt/bin/targets/*/*/*.tar.gz openwrt-armvirt/
        echo -e "\n"
        echo "列出空间占用前10的目录或文件："
        sudo du -h --max-depth=1 /workdir |sort -nr | head -10
      #  rm -rf /workdir/openwrt/ && sync
       # echo -e "\n"
       # echo "清理之后："
     #   df -hT

    - name: Package armsr as openwrt
      if: ${{ env.compile_status }} == 'success' && !cancelled()
      uses: unifreq/openwrt_packit@master
      env:
        OPENWRT_ARMVIRT: openwrt-armvirt/*.tar.gz
        KERNEL_VERSION_NAME: 6.6.y_6.12.y
        KERNEL_AUTO_LATEST: true
        PACKAGE_SOC: diy
        GZIP_IMGS: .xz
        KERNEL_REPO_URL: breakingbadboy/OpenWrt
        SCRIPT_DIY_PATH: N1/mk_s905d_n1.sh
        WHOAMI: dsdds
        SW_FLOWOFFLOAD: 0
        SFE_FLOW: 0

    - name: 整理文件
      run: mv /opt/openwrt_packit/output/* /workdir/upload/

    - name: Upload firmware to release
      uses: ncipollo/release-action@v1
      if: ${{ env.PACKAGED_STATUS == 'success' }} && !cancelled()

      with:
        tag: OpenWrt_${{ env.PACKAGED_OUTPUTDATE }}
        artifacts: /workdir/upload/*
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          首次使用建议全新刷写
          * 基本信息
          IP: 192.168.3.3
          账户: root
          密码: password

    - name: Delete old releases
      uses: dev-drprasad/delete-older-releases@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        keep_latest: 2
        delete_tags : true


    - name: Delete Workflow Runs
      uses: Mattraks/delete-workflow-runs@v2.0.6
      with:
         token: ${{ secrets.GITHUB_TOKEN }}
         repository: ${{ github.repository }}
         retain_days: 1
         keep_minimum_runs: 0